repeat
    wait()
until game:IsLoaded()
local OldPos = nil
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local InputService = game:GetService("UserInputService")
local TeleportService = game:GetService("TeleportService")
local MarketplaceService = game:GetService("MarketplaceService")
local luxecc = {
    Target = nil,
    LookAt = {Enabled = false},
    Headless = {Enabled = false},
    Korblox = {Enabled = false},
    Notification = {Enabled = false},
    NoJumpcooldown = {Enabled = false},
    NoRecoil = {Enabled = false},
    Aimlock = {Enabled = false, Prediction = false, Pred = 0.147, Part = "UpperTorso", AirShot = false, AirPart = "LowerTorso", KnockedCheck = false, GrabbedCheck = false, Key = "", Resolver = false, AutoPrediction = false},
    Camlock = {Enabled = false, Prediction = false, Pred = 0.147, Part = "Head", AirShot = false, AirPart = "LowerTorso", KnockedCheck = false, GrabbedCheck = false, Key = "", Resolver = false, AutoPrediction = false, Smoothness = false, SmoothnessAmount = 0.2, EasingStyle = "Sine", EasingDirection = "Out"},
    SilentAim = {Enabled = false, Target = nil, Prediction = false, Pred = 0.147, Part = "UpperTorso", AirShot = false, AirPart ="LowerTorso", KnockedCheck = false, GrabbedCheck = false, Key = "", Size = 85, Transparency = 0.5, Filled = false, Color = Color3.fromRGB(255, 0, 0)},
    AntiAim = {Enabled = false, Key = "", XValue = 0, YValue = 0, ZValue = 0, Type = "Sky"},
    Visuals = {Enabled = false, Hitbox = false, Text = false, Name = false, Health = false, Distance = false, Wanted = false, Cham = false, Items = false, Chat = false},
    Desync = {Enabled = false, Key = ""},
    NoClip = {Enabled = false, Key = ""},
    SpinBot = {Enabled = false, Speed = 50},
    Fly = {Enabled = false, Speed = 4, Key = "V"},
    Strafe = {Enabled = false, Distance = 8, Speed = 2.8, Angle = 0, Type = "Orbit", View = false},
    Speed = {Enabled = false, Speed = 0.4, Key = "", SprintKey = "LeftShift"},
    AutoArmor = {Enabled = false, TP = false, Delay = 0, BuyHP = 45, ArmorToBuy = "[High-Medium Armor] - $2440"},
    AutoHeal = {Enabled = false, TP = false, Delay = 0, BuyHP = 25, FoodToBuy = "[Popcorn] - $7"},
    PTele = {Speed = 0.2, Type = "CFrame"},
    Teleports = {
        Bank = CFrame.new(-470.373474, 39.0684624, -284.831848, -0.0511315688, 3.44844828e-08, -0.998691916, -8.0414118e-08, 1, 3.86467356e-08, 0.998691916, 8.22850055e-08, -0.0511315688), 
        Casino = CFrame.new(-867.366455, 43.7999496, -155.645859, 0.999982715, 7.22820914e-08, 0.00588375516, -7.25752187e-08, 1, 4.96055641e-08, -0.00588375516, -5.00317192e-08, 0.999982715), 
        StripClub = CFrame.new(-263.665283, 0.0313377157, -328.721832, 0.999999762, 9.82708244e-08, 0.000672494818, -9.82943433e-08, 1, 3.49390987e-08, -0.000672494818, -3.50051934e-08, 0.999999762), 
        School = CFrame.new(-604.562012, 47.7499886, 244.782974, 0.999673009, -6.03166086e-08, -0.0255717915, 6.24988203e-08, 1, 8.45373478e-08, 0.0255717915, -8.61079101e-08, 0.999673009), 
        UFO = CFrame.new(70.958992, 156.574448, -689.503174, -0.999162197, -3.74492792e-08, 0.0409258381, -3.533561e-08, 1, 5.23697317e-08, -0.0409258381, 5.08797129e-08, -0.999162197), 
        UpHill = CFrame.new(481.964111, 62.5341187, -620.900757, -0.9999066, 1.87809519e-08, -0.0136653278, 1.84973032e-08, 1, 2.08831938e-08, 0.0136653278, 2.06284732e-08, -0.9999066), 
        DownHill = CFrame.new(-577.774292, 22.8150673, -736.13916, -7.75719527e-05, 3.84763332e-08, -1, -1.17687171e-09, 1, 3.8476422e-08, 1, 1.17985643e-09, -7.75719527e-05),
        ShoppingPlaza = CFrame.new(-991.641235, 42.3799934, -673.324585, -0.0390856378, 2.64607305e-08, -0.999235868, 3.92789197e-08, 1, 2.49445513e-08, 0.999235868, -3.82739316e-08, -0.0390856378)
    },
}
local Library = loadstring(game:GetObjects("rbxassetid://7657867786")[1].Source)()
local NotifyLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/Dynissimo/main/Scripts/AkaliNotif.lua"))()
local Wait = Library.subs.Wait -- Only returns if the GUI has not been terminated. For 'while Wait() do' loops
local luxe = Library:CreateWindow(
    {
        Name = "$ | [C4$H]", 
        Themeable = {
            Info = {
                ".gg/universal", 
                "Made by @cashiin",
                "NOT MY GUI!!"
            }, 
            Credit = false,
            Background = {
                Asset = "rbxassetid://15201607668",
                Visible = 100,
            }
        }
    }
)


local SilentFOV = Drawing.new("Circle")
SilentFOV.Visible = false
SilentFOV.Radius = luxecc.SilentAim.Size
SilentFOV.Color = luxecc.SilentAim.Color
SilentFOV.Filled = luxecc.SilentAim.Filled
SilentFOV.Transparency = luxecc.SilentAim.Transparency

local function FindPlayer(name)
    for _, v in pairs(Players:GetPlayers()) do 
        if string.lower(string.sub(v.Name, 1, string.len(name))) == string.lower(name) then 
            return v
        elseif string.lower(string.sub(v.DisplayName, 1, string.len(name))) == string.lower(name) then 
            return v
        end
    end
end

local function CheckTarget(player)
    if luxecc.Aimlock.KnockedCheck or luxecc.Camlock.KnockedCheck or luxecc.SilentAim.KnockedCheck then
        if player.Character.BodyEffects:FindFirstChild("K.O").Value then return true end
    end
    if luxecc.Aimlock.GrabbedCheck or luxecc.Camlock.GrabbedCheck or luxecc.SilentAim.GrabbedCheck then
        if player.Character:FindFirstChild("GRABBING_CONSTRAINT") then return true end
    end
    return false
end

local function GetClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            local character = player.Character
            local rootPart = character and character:FindFirstChild("HumanoidRootPart")

            if rootPart and character:FindFirstChild("Humanoid")and not CheckTarget(player) then
                local pos = workspace.CurrentCamera:WorldToViewportPoint(rootPart.Position)
                local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(LocalPlayer:GetMouse().X, LocalPlayer:GetMouse().Y + 36)).Magnitude

                if magnitude < shortestDistance then
                    closestPlayer = player
                    shortestDistance = magnitude
                end
            end
        end
    end

    return closestPlayer
end

local function GetSilentPlayer(radius)
    local closestPlayer = nil
    local shortestDistance = radius

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            local character = player.Character
            local rootPart = character and character:FindFirstChild("HumanoidRootPart")

            if rootPart and character:FindFirstChild("Humanoid") and not CheckTarget(player) then
                local pos, onScreen = workspace.CurrentCamera:WorldToViewportPoint(rootPart.Position)
                local magnitude = (Vector2.new(pos.X, pos.Y) - InputService:GetMouseLocation()).Magnitude

                if magnitude < shortestDistance and onScreen then
                    closestPlayer = player
                    shortestDistance = magnitude
                end
            end
        end
    end

    return closestPlayer
end

local function Notify(title, text, time)
    if luxecc.Notification.Enabled then
        NotifyLibrary.Notify({
            Title = title;
            Description = text;
            Duration = time;
        })
    else
        print(title, text)
    end
end

local function Fly()
    luxecc.Fly.Enabled = not luxecc.Fly.Enabled
    Notify("luxe | Fly", "Flying : " .. tostring(luxecc.Fly.Enabled), 3)
    local BodyPosition = Instance.new("BodyPosition", game.Players.LocalPlayer.Character:FindFirstChild("Head"))
    local BodyGyro = Instance.new("BodyGyro", game.Players.LocalPlayer.Character:FindFirstChild("Head"))
    BodyPosition.maxForce = Vector3.new(math.huge, math.huge, math.huge)
    BodyPosition.position = game.Players.LocalPlayer.Character:FindFirstChild("Head").Position
    BodyGyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
    BodyGyro.CFrame = game.Players.LocalPlayer.Character:FindFirstChild("Head").CFrame
    repeat
        wait()
        game.Players.LocalPlayer.Character.Humanoid.PlatformStand = true
        local New = BodyGyro.CFrame - BodyGyro.CFrame.p + BodyPosition.position
        if InputService:IsKeyDown("W") then
            New = New + workspace.CurrentCamera.CoordinateFrame.lookVector * luxecc.Fly.Speed
            BodyGyro.CFrame = workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad(luxecc.Fly.Speed * 0), 0, 0)
        end
        if InputService:IsKeyDown("S") then
            New = New - workspace.CurrentCamera.CoordinateFrame.lookVector * luxecc.Fly.Speed
            BodyGyro.CFrame = workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(math.rad(luxecc.Fly.Speed * 0), 0, 0)
        end
        if InputService:IsKeyDown("D") then
            New = New * CFrame.new(luxecc.Fly.Speed, 0, 0)
            BodyGyro.CFrame = workspace.CurrentCamera.CoordinateFrame
        end
        if InputService:IsKeyDown("A") then
            New = New * CFrame.new(-luxecc.Fly.Speed, 0, 0)
            BodyGyro.CFrame = workspace.CurrentCamera.CoordinateFrame
        end
        BodyPosition.Position = New.p
    until not luxecc.Fly.Enabled
    luxecc.Fly.Enabled = false
    BodyGyro:Destroy()
    BodyPosition:Destroy()
    game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
end


RunService.Heartbeat:Connect(function()

    if luxecc.SilentAim.Enabled and SilentFOV.Visible then
        SilentFOV.Position = InputService:GetMouseLocation()
        SilentFOV.Radius = luxecc.SilentAim.Size
        SilentFOV.Transparency = luxecc.SilentAim.Transparency
        SilentFOV.Color = luxecc.SilentAim.Color
        SilentFOV.Filled = luxecc.SilentAim.Filled
        luxecc.SilentAim.Target = GetSilentPlayer(SilentFOV.Radius)
    end

    if luxecc.Camlock.Enabled and luxecc.Target then
        local targetPart = luxecc.Camlock.Part
        if luxecc.Camlock.AirShot and luxecc.Target.Character:FindFirstChild("Humanoid") and luxecc.Target.Character.Humanoid:GetState() == Enum.HumanoidStateType.Freefall then
            targetPart = luxecc.Camlock.AirPart
        end

        local targetPosition = luxecc.Target.Character[targetPart].Position

        if luxecc.Camlock.Resolver then
            targetPosition = luxecc.Target.Character[targetPart].Position
        elseif luxecc.Camlock.Prediction then
            local velocity = luxecc.Target.Character[targetPart].Velocity
            if velocity then
                targetPosition = luxecc.Target.Character[targetPart].Position + (velocity * luxecc.Camlock.Pred)
            end
        end

        if luxecc.Camlock.Smoothness then
            TweenService:Create(
                workspace.CurrentCamera,
                TweenInfo.new(
                    luxecc.Camlock.SmoothnessAmount,
                    Enum.EasingStyle[luxecc.Camlock.EasingStyle],
                    Enum.EasingDirection[luxecc.Camlock.EasingDirection]
                ),
                {CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, targetPosition)}
            ):Play()
        else
            workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, targetPosition)
        end
    end

    if luxecc.Strafe.Enabled then
        if luxecc.Target and luxecc.Target.Character and luxecc.Target.Character:FindFirstChild("HumanoidRootPart") then
            luxecc.Strafe.Angle = luxecc.Strafe.Angle + luxecc.Strafe.Speed

            if luxecc.Strafe.View then
                game.Workspace.CurrentCamera.CameraSubject = luxecc.Target.Character.Humanoid
            else
                game.Workspace.CurrentCamera.CameraSubject = LocalPlayer.Character.Humanoid
            end

            if luxecc.Strafe.Type == "Orbit" then
                LocalPlayer.Character.HumanoidRootPart.CFrame = luxecc.Target.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, luxecc.Strafe.Angle, 0) * CFrame.new(0, 0, luxecc.Strafe.Distance)
            end
        else
            game.Workspace.CurrentCamera.CameraSubject = LocalPlayer.Character.Humanoid
        end
    else
        game.Workspace.CurrentCamera.CameraSubject = LocalPlayer.Character.Humanoid
    end

    if luxecc.AutoArmor.Enabled and luxecc.AutoArmor.TP and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        if LocalPlayer.Character.BodyEffects.Armor.Value <= luxecc.AutoArmor.BuyHP and workspace.Ignored.Shop:FindFirstChild(luxecc.AutoArmor.ArmorToBuy) and not LocalPlayer.Character.BodyEffects["K.O"].Value and not LocalPlayer.Character.BodyEffects["Grabbed"].Value then
            if not OldPos then
                OldPos = LocalPlayer.Character.HumanoidRootPart.CFrame
            end

            local equippedTool = LocalPlayer.Character:FindFirstChildOfClass("Tool")
            if equippedTool then
                equippedTool.Parent = LocalPlayer.Backpack
            end

            local shopItem = workspace.Ignored.Shop:FindFirstChild(luxecc.AutoArmor.ArmorToBuy)
            if shopItem and shopItem:FindFirstChild("ClickDetector") then
                LocalPlayer.Character.HumanoidRootPart.CFrame = shopItem.Head.CFrame
                wait(luxecc.AutoArmor.Delay)
                fireclickdetector(shopItem.ClickDetector)
            end

            if OldPos then
                LocalPlayer.Character.HumanoidRootPart.CFrame = OldPos
                OldPos = nil
            end
        end
    end

    if luxecc.AntiAim.Enabled and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local OldVelocity = LocalPlayer.Character.HumanoidRootPart.Velocity
        if luxecc.AntiAim.Type == "Sky" then
            LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 9999, 0)
        elseif luxecc.AntiAim.Type == "Underground" then
            LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, -9999, 0)
        elseif luxecc.AntiAim.Type == "Custom Vel"  then
            LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(luxecc.AntiAim.XValue, luxecc.AntiAim.YValue, luxecc.AntiAim.ZValue)
        end
        RunService.RenderStepped:Wait()
        LocalPlayer.Character.HumanoidRootPart.Velocity = OldVelocity
    end
    
end)


local Old; Old = hookmetamethod(game, "__namecall", function(self, ...)
    local args = { ... }
    local method = getnamecallmethod()

    if method == "FireServer" then
        if args[1] == "UpdateMousePos" or args[1] == "MousePos" or args[1] == "Mouse" or args[1] == "MOUSE" then
            if luxecc.Aimlock.Enabled and luxecc.Target then
                if luxecc.Aimlock.Resolver then
                    args[2] = luxecc.Target.Character[luxecc.Aimlock.Part].Position
                    return Old(self, unpack(args))
                elseif luxecc.Aimlock.Prediction then
                    args[2] = luxecc.Target.Character[luxecc.Aimlock.Part].Position + (luxecc.Target.Character[luxecc.Aimlock.Part].Velocity * luxecc.Aimlock.Pred)
                    return Old(self, unpack(args))
                elseif luxecc.Aimlock.AirShot and luxecc.Target.Character:FindFirstChild("Humanoid") and luxecc.Target.Character.Humanoid.FloorMaterial == Enum.Material.Air then
                    args[2] = luxecc.Target.Character[luxecc.Aimlock.AirPart].Position + (luxecc.Target.Character[luxecc.Aimlock.AirPart].Velocity * luxecc.Aimlock.Pred)
                    return Old(self, unpack(args))
                else
                    args[2] = luxecc.Target.Character[luxecc.Aimlock.Part].Position
                    return Old(self, unpack(args))
                end
            end
            if luxecc.SilentAim.Enabled and luxecc.SilentAim.Target then
                if luxecc.SilentAim.Prediction then
                    args[2] = luxecc.SilentAim.Target.Character[luxecc.SilentAim.Part].Position + (luxecc.SilentAim.Target.Character[luxecc.SilentAim.Part].Velocity * luxecc.SilentAim.Pred)
                    return Old(self, unpack(args))
                else
                    args[2] = luxecc.SilentAim.Target.Character[luxecc.SilentAim.Part].Position
                    return Old(self, unpack(args))
                end
            end
        end
    end

    return Old(self, ...)
end)



local AimTab = luxe:CreateTab({Name = "Lock"})
local AimingSection = AimTab:CreateSection({Name = "$", Side = "Right"})
AimingSection:AddKeybind(
    {
        Name = "Keybind",
        Keybind = luxecc.Camlock.Key,
        Pressed = function()
            if luxecc.Target then
                luxecc.Target = nil
                Notify("luxe | Target", "Targets cleared", 3)
            else
                luxecc.Target = GetClosestPlayer()
                if luxecc.Target then
                    Notify("luxe | Target", "Target acquired: " ..tostring(luxecc.Target), 3)
                else
                    Notify("luxe | Target", "No valid targets found", 3)
                end
            end
        end
    }
)
--[[AimingSection:AddToggle(
    {
        Name = "Aimlock",
        Value = luxecc.Aimlock.Enabled,
        Keybind = luxecc.Aimlock.Key,
        Callback = function(v)
            luxecc.Aimlock.Enabled = v
            Notify("luxe | Aimlock", "Aimlock : "..tostring(luxecc.Aimlock.Enabled), 3)
        end
    }
)
AimingSection:AddToggle(
    {
        Name = "Air Shot",
        Value = luxecc.Aimlock.AirShot,
        Callback = function(v)
            luxecc.Aimlock.AirShot = v
            Notify("luxe | Aimlock", "Air Shot : "..tostring(luxecc.Aimlock.AirShot), 3)
        end
    }
)
AimingSection:AddDropdown(
    {
        Name = "Aim Part",
        Value = luxecc.Aimlock.Part,
        List = {"Head", "UpperTorso", "HumanoidRootPart", "LowerTorso"},
        Callback = function(v)
            luxecc.Aimlock.Part = v
            Notify("luxe | Aimlock", "Part : "..tostring(luxecc.Aimlock.Part), 3)
        end
    }
)
AimingSection:AddDropdown(
    {
        Name = "Air Part",
        Value = luxecc.Aimlock.AirPart,
        List = {"Head", "UpperTorso", "HumanoidRootPart", "LowerTorso"},
        Callback = function(v)
            luxecc.Aimlock.AirPart = v
            Notify("luxe | Aimlock", "Air Part : "..tostring(luxecc.Aimlock.AirPart), 3)
        end
    }
)
AimingSection:AddToggle(
    {
        Name = "Look At",
        Value = luxecc.Aimlock.LookAt,
        Callback = function(v)
            luxecc.LookAt = v
            Notify("luxe | Aimlock", "Look At : "..tostring(luxecc.LookAt), 3)
        end
    }
)
AimingSection:AddToggle(
    {
        Name = "Resolver",
        Value = luxecc.Aimlock.Resolver,
        Callback = function(v)
            luxecc.Aimlock.Resolver = v
            Notify("luxe | Aimlock", "Resolver : "..tostring(luxecc.Aimlock.Resolver), 3)
        end
    }
)
AimingSection:AddToggle(
    {
        Name = "Prediction",
        Value = luxecc.Aimlock.Prediction,
        Callback = function(v)
            luxecc.Aimlock.Prediction = v
            Notify("luxe | Aimlock", "Prediction : "..tostring(luxecc.Aimlock.Prediction), 3)
        end
    }
)
local AimlockPrediction = AimingSection:AddSlider(
    {
        Name = "Aimbot Prediction",
        Value = luxecc.Aimlock.Pred,
        Min = 0,
        Max = 1,
        Decimals = 3,
        Format = function(v)
            return "Prediction: " .. tostring(v)
        end,
        Callback = function(v)
            luxecc.Aimlock.Pred = v
            Notify("luxe | Aimlock", "Prediction: " .. tostring(luxecc.Aimlock.Pred), 3)
        end
    }
)
AimingSection:AddToggle(
    {
        Name = "Auto Prediction",
        Value = luxecc.Aimlock.AutoPrediction,
        Callback = function(v)
            luxecc.Aimlock.AutoPrediction = v
            Notify("luxe | Aimlock", "Auto Prediction : "..tostring(luxecc.Aimlock.AutoPrediction), 3)
            repeat
                if luxecc.Aimlock.AutoPrediction then
                    local ping = tonumber((game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString() or ""):split(" ")[1])
                    if ping then
                        if ping > 200 and ping < 300 then 
                            luxecc.Aimlock.Pred = 0.18742
                        elseif ping > 180 and ping < 195 then 
                            luxecc.Aimlock.Pred = 0.16779123
                        elseif ping > 140 and ping < 180 then 
                            luxecc.Aimlock.Pred = 0.16
                        elseif ping > 110 and ping < 140 then 
                            luxecc.Aimlock.Pred = 0.15934
                        elseif ping < 105 and ping > 90 then
                            luxecc.Aimlock.Pred = 0.138
                        elseif ping < 90 and ping > 80 then
                            luxecc.Aimlock.Pred = 0.136
                        elseif ping < 80 and ping > 70 then
                            luxecc.Aimlock.Pred = 0.134
                        elseif ping < 70 and ping > 60 then
                            luxecc.Aimlock.Pred = 0.131
                        elseif ping < 60 and ping > 50 then
                            luxecc.Aimlock.Pred = 0.1229
                        elseif ping < 50 and ping > 40 then
                            luxecc.Aimlock.Pred = 0.1225
                        elseif ping < 40 then
                            luxecc.Aimlock.Pred = 0.1256
                        end
                        AimlockPrediction:RawSet(luxecc.Aimlock.Pred)
                    end
                end
                wait()
            until not luxecc.Aimlock.AutoPrediction
        end
    }
)
AimingSection:AddToggle(
    {
        Name = "Knocked Check",
        Value = luxecc.Aimlock.KnockedCheck,
        Callback = function(v)
            luxecc.Aimlock.KnockedCheck = v
            Notify("luxe | Aimlock", "Knocked Check : "..tostring(luxecc.Aimlock.KnockedCheck), 3)
        end
    }
)
AimingSection:AddToggle(
    {
        Name = "Grabbed Check",
        Value = luxecc.Aimlock.GrabbedCheck,
        Callback = function(v)
            luxecc.Aimlock.GrabbedCheck = v
            Notify("luxe | Aimlock", "Grabbed Check : "..tostring(luxecc.Aimlock.GrabbedCheck), 3)
        end
    }
)]]


local CameraSection = AimTab:CreateSection({Name = "Camera Aimlock", Side = "Left"})
CameraSection:AddToggle(
    {
        Name = "Camlock",
        Value = luxecc.Camlock.Enabled,
        --Keybind = luxecc.Camlock.Key,
        Callback = function(v)
            luxecc.Camlock.Enabled = v
            Notify("luxe | Camlock", "Camlock : " .. tostring(luxecc.Camlock.Enabled), 3)
        end
    }
)

CameraSection:AddToggle(
    {
        Name = "Air Shot",
        Value = luxecc.Camlock.AirShot,
        Callback = function(v)
            luxecc.Camlock.AirShot = v
            Notify("luxe | Camlock", "Air Shot : "..tostring(luxecc.Camlock.AirShot), 3)
        end
    }
)

CameraSection:AddDropdown(
    {
        Name = "Aim Part",
        Value = luxecc.Camlock.Part,
        List = {"Head", "UpperTorso", "HumanoidRootPart", "LowerTorso"},
        Callback = function(v)
            luxecc.Camlock.Part = v
            Notify("luxe | Camlock", "Part : "..tostring(luxecc.Camlock.Part), 3)
        end
    }
)
CameraSection:AddDropdown(
    {
        Name = "Air Part",
        Value = luxecc.Camlock.AirPart,
        List = {"Head", "UpperTorso", "HumanoidRootPart", "LowerTorso"},
        Callback = function(v)
            luxecc.Camlock.AirPart = v
            Notify("luxe | Camlock", "Air Part : "..tostring(luxecc.Camlock.AirPart), 3)
        end
    }
)
CameraSection:AddToggle(
    {
        Name = "Resolver",
        Value = luxecc.Camlock.Resolver,
        Callback = function(v)
            luxecc.Camlock.Resolver = v
            Notify("luxe | Camlock", "Resolver : " .. tostring(luxecc.Camlock.Resolver), 3)
        end
    }
)
CameraSection:AddToggle(
    {
        Name = "Smoothness",
        Value = luxecc.Camlock.Smoothness,
        Callback = function(v)
            luxecc.Camlock.Smoothness = v
            Notify("luxe | Camlock", "Smoothness : "..tostring(luxecc.Camlock.Smoothness), 3)
        end
    }
)
CameraSection:AddSlider(
    {
        Name = "Smoothness Amount",
        Value = luxecc.Camlock.SmoothnessAmount,
        Min = 0,
        Max = 1,
        Decimals = 2,
        Format = function(v)
            return "Smoothness: " .. tostring(v)
        end,
        Callback = function(v)
            luxecc.Camlock.SmoothnessAmount = v
            Notify("luxe | Camlock", "Smoothness Amount: " .. tostring(luxecc.Camlock.SmoothnessAmount), 3)
        end
    }
)
CameraSection:AddDropdown(
    {
        Name = "Easing Style",
        Value = luxecc.Camlock.EasingStyle,
        List = {"Sine", "Back", "Quad", "Cubic", "Quart", "Quint", "Linear", "Bounce", "Elastic", "Circular", "Exponential",},
        Callback = function(v)
            luxecc.Camlock.EasingStyle = v
            Notify("luxe | Camlock", "Easing Style : "..tostring(luxecc.Camlock.EasingStyle), 3)
        end
    }
)
CameraSection:AddDropdown(
    {
        Name = "Easing Direction",
        Value = luxecc.Camlock.EasingDirection,
        List = {"In", "Out", "InOut", "OutIn"},
        Callback = function(v)
            luxecc.Camlock.EasingDirection = v
            Notify("luxe | Camlock", "Easing Style : "..tostring(luxecc.Camlock.EasingDirection), 3)
        end
    }
)

CameraSection:AddToggle(
    {
        Name = "Prediction",
        Value = luxecc.Camlock.Prediction,
        Callback = function(v)
            luxecc.Camlock.Prediction = v
            Notify("luxe | Camlock", "Prediction : "..tostring(luxecc.Camlock.Prediction), 3)
        end
    }
)
local CameraPrediction = CameraSection:AddSlider(
    {
        Name = "Camera Prediction",
        Value = luxecc.Camlock.Pred,
        Min = 0,
        Max = 1,
        Decimals = 3,
        Format = function(v)
            return "Prediction: " .. tostring(v)
        end,
        Callback = function(v)
            luxecc.Camlock.Pred = v
            Notify("luxe | Camlock", "Prediction : " .. tostring(luxecc.Camlock.Prediction), 3)
        end
    }
)
CameraSection:AddToggle(
    {
        Name = "Auto Prediction",
        Value = luxecc.Camlock.AutoPrediction,
        Callback = function(v)
            luxecc.Camlock.AutoPrediction = v
            Notify("luxe | Camlock", "Auto Prediction : "..tostring(luxecc.Camlock.AutoPrediction), 3)
            repeat
                if luxecc.Camlock.AutoPrediction then
                    local ping = tonumber((game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString() or ""):split(" ")[1])
                    if ping then
                        if ping > 200 and ping < 300 then 
                            luxecc.Camlock.Pred = 0.18742
                        elseif ping > 180 and ping < 195 then 
                            luxecc.Camlock.Pred = 0.16779123
                        elseif ping > 140 and ping < 180 then 
                            luxecc.Camlock.Pred = 0.16
                        elseif ping > 110 and ping < 140 then 
                            luxecc.Camlock.Pred = 0.15934
                        elseif ping < 105 and ping > 90 then
                            luxecc.Camlock.Pred = 0.138
                        elseif ping < 90 and ping > 80 then
                            luxecc.Camlock.Pred = 0.136
                        elseif ping < 80 and ping > 70 then
                            luxecc.Camlock.Pred = 0.134
                        elseif ping < 70 and ping > 60 then
                            luxecc.Camlock.Pred = 0.131
                        elseif ping < 60 and ping > 50 then
                            luxecc.Camlock.Pred = 0.1229
                        elseif ping < 50 and ping > 40 then
                            luxecc.Camlock.Pred = 0.1225
                        elseif ping < 40 then
                            luxecc.Camlock.Pred = 0.1256
                        end
                        CameraPrediction:RawSet(luxecc.Camlock.Pred)
                    end
                end
                wait()
            until not luxecc.Camlock.AutoPrediction
        end
    }
)
CameraSection:AddToggle(
    {
        Name = "Knocked Check",
        Value = luxecc.Camlock.KnockedCheck,
        Callback = function(v)
            luxecc.Camlock.KnockedCheck = v
            Notify("luxe | Camlock", "Knocked Check : "..tostring(luxecc.Camlock.KnockedCheck), 3)
        end
    }
)
CameraSection:AddToggle(
    {
        Name = "Grabbed Check",
        Value = luxecc.Camlock.GrabbedCheck,
        Callback = function(v)
            luxecc.Camlock.GrabbedCheck = v
            Notify("luxe | Camlock", "Grabbed Check : "..tostring(luxecc.Camlock.GrabbedCheck), 3)
        end
    }
)

--[[local SilentSection = AimTab:CreateSection({Name = "Silent Aim", Side = "Left"})
SilentSection:AddToggle(
    {
        Name = "Silent Aim",
        Keybind = luxecc.SilentAim.Key,
        Value = luxecc.SilentAim.Enabled,
        Callback = function(v)
            luxecc.SilentAim.Enabled = v
            Notify("luxe | Silent Aim", "Silent Aim : "..tostring(luxecc.SilentAim.Enabled), 3)
        end
    }
)
SilentSection:AddToggle(
    {
        Name = "Air Shot",
        Value = luxecc.SilentAim.AirShot,
        Callback = function(v)
            luxecc.SilentAim.AirShot = v
            Notify("luxe | Silent Aim", "Air Shot : "..tostring(luxecc.SilentAim.AirShot), 3)
        end
    }
)
SilentSection:AddDropdown(
    {
        Name = "Aim Part",
        Value = luxecc.SilentAim.Part,
        List = {"Head", "UpperTorso", "HumanoidRootPart", "LowerTorso"},
        Callback = function(v)
            luxecc.SilentAim.Part = v
            Notify("luxe | Silent Aim", "Part : "..tostring(luxecc.SilentAim.Part), 3)
        end
    }
)
SilentSection:AddDropdown(
    {
        Name = "Air Part",
        Value = luxecc.SilentAim.AirPart,
        List = {"Head", "UpperTorso", "HumanoidRootPart", "LowerTorso"},
        Callback = function(v)
            luxecc.SilentAim.AirPart = v
            Notify("luxe | Silent Aim", "Air Part : "..tostring(luxecc.SilentAim.AirPart), 3)
        end
    }
)
SilentSection:AddToggle(
    {
        Name = "Prediction",
        Value = luxecc.SilentAim.Prediction,
        Callback = function(v)
            luxecc.SilentAim.Prediction = v
            Notify("luxe | Silent Aim", "Prediction : "..tostring(luxecc.SilentAim.Prediction), 3)
        end
    }
)
local SlientPrediction = SilentSection:AddSlider(
    {
        Name = "Aimbot Prediction",
        Value = luxecc.SilentAim.Pred,
        Min = 0,
        Max = 1,
        Decimals = 3,
        Format = function(v)
            return "Prediction: " .. tostring(v)
        end,
        Callback = function(v)
            luxecc.SilentAim.Pred = v
            Notify("luxe | Silent Aim", "Prediction : " .. tostring(luxecc.SilentAim.Pred), 3)
        end
    }
)
SilentSection:AddToggle(
    {
        Name = "Auto Prediction",
        Value = luxecc.SilentAim.AutoPrediction,
        Callback = function(v)
            luxecc.SilentAim.AutoPrediction = v
            Notify("luxe | Silent Aim", "Auto Prediction : "..tostring(luxecc.SilentAim.AutoPrediction), 3)
            repeat
                if luxecc.SilentAim.AutoPrediction then
                    local ping = tonumber((game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString() or ""):split(" ")[1])
                    if ping then
                        if ping > 200 and ping < 300 then 
                            luxecc.SilentAim.Pred = 0.18742
                        elseif ping > 180 and ping < 195 then 
                            luxecc.SilentAim.Pred = 0.16779123
                        elseif ping > 140 and ping < 180 then 
                            luxecc.SilentAim.Pred = 0.16
                        elseif ping > 110 and ping < 140 then 
                            luxecc.SilentAim.Pred = 0.15934
                        elseif ping < 105 and ping > 90 then
                            luxecc.SilentAim.Pred = 0.138
                        elseif ping < 90 and ping > 80 then
                            luxecc.SilentAim.Pred = 0.136
                        elseif ping < 80 and ping > 70 then
                            luxecc.SilentAim.Pred = 0.134
                        elseif ping < 70 and ping > 60 then
                            luxecc.SilentAim.Pred = 0.131
                        elseif ping < 60 and ping > 50 then
                            luxecc.SilentAim.Pred = 0.1229
                        elseif ping < 50 and ping > 40 then
                            luxecc.SilentAim.Pred = 0.1225
                        elseif ping < 40 then
                            luxecc.SilentAim.Pred = 0.1256
                        end
                        SlientPrediction:RawSet(luxecc.SilentAim.Pred)
                    end
                end
                wait()
            until not luxecc.SilentAim.AutoPrediction
        end
    }
)
SilentSection:AddToggle(
    {
        Name = "Knocked Check",
        Value = luxecc.Camlock.KnockedCheck,
        Callback = function(v)
            luxecc.Camlock.KnockedCheck = v
            Notify("luxe | Camlock", "Knocked Check : "..tostring(luxecc.SilentAim.KnockedCheck), 3)
        end
    }
)
SilentSection:AddToggle(
    {
        Name = "Grabbed Check",
        Value = luxecc.SilentAim.GrabbedCheck,
        Callback = function(v)
            luxecc.SilentAim.GrabbedCheck = v
            Notify("luxe | Silent Aim", "Grabbed Check : "..tostring(luxecc.SilentAim.GrabbedCheck), 3)
        end
    }
)





SilentSection:AddToggle(
    {
        Name = "Show FOV",
        Value = SilentFOV.Visible,
        Callback = function(v)
            SilentFOV.Visible = v
            Notify("luxe | Silent Aim", "FOV : "..tostring(SilentFOV.Visible), 3)
        end
    }
)
SilentSection:AddColorPicker(
    {
        Name = "FOV Color",
        Value = luxecc.SilentAim.Color,
        Callback = function(v)
            luxecc.SilentAim.Color = v
        end
    }
)
SilentSection:AddToggle(
    {
        Name = "Filled",
        Value = luxecc.SilentAim.Filled,
        Callback = function(v)
            luxecc.SilentAim.Filled = v
            Notify("luxe | Silent Aim", "Filled : "..tostring(luxecc.SilentAim.Filled), 3)
        end
    }
)
SilentSection:AddSlider(
    {
        Name = "FOV Size",
        Value = luxecc.SilentAim.Size,
        Min = 25,
        Max = 1000,
        Format = function(v)
            return "Size : " .. tostring(v)
        end,
        Callback = function(v)
            luxecc.SilentAim.Size = v
            Notify("luxe | Silent Aim", "Size : " .. tostring(luxecc.SilentAim.Size), 3)
        end
    }
)
SilentSection:AddSlider(
    {
        Name = "Transparency",
        Value = luxecc.SilentAim.Transparency,
        Min = 0,
        Max = 1,
        Format = function(v)
            return "Transparency : " .. tostring(v)
        end,
        Callback = function(v)
            luxecc.SilentAim.Transparency = v
            Notify("luxe | Silent Aim", "Transparency : " .. tostring(luxecc.SilentAim.Transparency), 3)
        end
    }
)]]



local CharTab = luxe:CreateTab({Name = "Character"})
local CharSection = CharTab:CreateSection({Name = "Character", Side = "Left"})
CharSection:AddToggle(
    {
        Name = "NoClip",
        Value = luxecc.NoClip.Enabled,
        Keybind = luxecc.NoClip.Key,
        Callback = function(v)
            luxecc.NoClip.Enabled = v
            if luxecc.NoClip.Enabled then
                repeat
                    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                        for _, v in pairs(LocalPlayer.Character:GetDescendants()) do
                            if v:IsA("BasePart") then
                                v.CanCollide = false
                            end
                        end
                    end
                    RunService.Stepped:Wait()
                until not luxecc.NoClip.Enabled
            else
                if LocalPlayer.Character then
                    for _, v in pairs(LocalPlayer.Character:GetDescendants()) do
                        if v:IsA("BasePart") then
                            v.CanCollide = true
                        end
                    end
                end
            end
        end
    }
)
CharSection:AddToggle(
    {
        Name = "Fly",
        Value = luxecc.Fly.Enabled,
        Keybind = luxecc.Fly.Key,
        Callback = function()
            Fly()
        end
    }
)
CharSection:AddSlider(
    {
        Name = "Fly Speed Multiplier",
        Value = luxecc.Fly.Speed,
        Min = 0,
        Max = 50,
        Format = function(v)
            return "Fly Speed : " .. tostring(v)
        end,
        Callback = function(v)
            luxecc.Fly.Speed = v
            Notify("luxe | Fly", "Speed : " .. tostring(luxecc.Fly.Speed), 3)
        end
    }
)
CharSection:AddToggle(
    {
        Name = "Korblox",
        Value = luxecc.Korblox.Enabled,
        Callback = function(v)
            luxecc.Korblox.Enabled = v
            if luxecc.Korblox.Enabled then
                LocalPlayer.Character.RightFoot.MeshId = "http://www.roblox.com/asset/?id=902942093"
                LocalPlayer.Character.RightFoot.Transparency = 1
                LocalPlayer.Character.RightLowerLeg.MeshId = "http://www.roblox.com/asset/?id=902942093"
                LocalPlayer.Character.RightLowerLeg.Transparency = 1
                LocalPlayer.Character.RightUpperLeg.MeshId = "http://www.roblox.com/asset/?id=902942096"
                LocalPlayer.Character.RightUpperLeg.TextureID = "http://roblox.com/asset/?id=902843398"
            end
            Notify("luxe | Korblox", "Korblox : "..tostring(luxecc.Korblox.Enabled), 3)
        end
    }
)
CharSection:AddTextbox({
    Name = "Add Accessory",
    Value = "",
    Placeholder = "Enter Asset ID",
    Callback = function()
    end
})
local CharSection = CharTab:CreateSection({Name = "Anti-Aim", Side = "Right"})
CharSection:AddToggle(
    {
        Name = "Anti Aim",
        Value = luxecc.AntiAim.Enabled,
        Keybind = luxecc.AntiAim.Key,
        Callback = function(v)
            luxecc.AntiAim.Enabled = v
            Notify("luxe | Anti-Aim", "Anti Aim : "..tostring(luxecc.AntiAim.Enabled), 3)
        end
    }
)
CharSection:AddToggle(
    {
        Name = "Desync",
        Value = luxecc.Desync.Enabled,
        Keybind = luxecc.Desync.Key,
        Callback = function(v)
            luxecc.Desync.Enabled = v
            Notify("luxe | Anti-Aim", "Desync : "..tostring(luxecc.Desync.Enabled), 3)
        end
    }
)
CharSection:AddDropdown(
    {
        Name = "AA Type",
        Value = luxecc.AntiAim.Type,
        List = {"Sky", "Underground", "Custom Vel"},
        Callback = function(v)
            luxecc.AntiAim.Type = v
            Notify("luxe | Anti-Aim", "Anti Aim Type : "..tostring(luxecc.AntiAim.Type), 3)
        end
    }
)
CharSection:AddSlider(
    {
        Name = "X Velocity",
        Value = luxecc.AntiAim.XValue,
        Min = -999,
        Max = 999,
        Format = function(v)
            return "X Velocity: " .. tostring(v)
        end,
        Callback = function(v)
            luxecc.AntiAim.XValue = v
            Notify("luxe | Anti-Aim", "X Velocity: " .. tostring(luxecc.AntiAim.XValue), 3)
        end
    }
)
CharSection:AddSlider(
    {
        Name = "Y Velocity",
        Value = luxecc.AntiAim.YValue,
        Min = -999,
        Max = 999,
        Format = function(v)
            return "Y Velocity: " .. tostring(v)
        end,
        Callback = function(v)
            luxecc.AntiAim.YValue = v
            Notify("luxe | Anti-Aim", "Y Velocity: " .. tostring(luxecc.AntiAim.YValue), 3)
        end
    }
)
CharSection:AddSlider(
    {
        Name = "Z Velocity",
        Value = luxecc.AntiAim.ZValue,
        Min = -999,
        Max = 999,
        Format = function(v)
            return "Z Velocity: " .. tostring(v)
        end,
        Callback = function(v)
            luxecc.AntiAim.ZValue = v
            Notify("luxe | Anti-Aim", "Z Velocity: " .. tostring(luxecc.AntiAim.ZValue), 3)
        end
    }
)


local RageSection = CharTab:CreateSection({Name = "Rage", Side = "Left"})
RageSection:AddKeybind(
    {
        Name = "Sprint Key",
        Value = Enum.KeyCode[luxecc.Speed.SprintKey],
        Mode = "Held",
        Pressed = function()
            repeat
                if luxecc.Speed.Enabled then
                    if InputService:IsKeyDown("W") or InputService:IsKeyDown("A") or InputService:IsKeyDown("S") or InputService:IsKeyDown("D") then
                        LocalPlayer.Character.HumanoidRootPart.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame + LocalPlayer.Character.Humanoid.MoveDirection * luxecc.Speed.Speed
                    end
                end
                game:GetService("RunService").Heartbeat:wait()
            until not InputService:IsKeyDown(luxecc.Speed.SprintKey)
        end,
    }
)
RageSection:AddToggle(
    {
        Name = "Speed",
        Value = luxecc.Speed.Enabled,
        Keybind = "",
        Callback = function(v)
            luxecc.Speed.Enabled = v
            Notify("luxe | Speed", "Speed : " .. tostring(luxecc.Speed.Enabled), 3)
        end
    }
)
RageSection:AddToggle(
    {
        Name = "Spin Bot",
        Value = luxecc.SpinBot.Enabled,
        Callback = function(v)
            luxecc.SpinBot.Enabled = v
            if luxecc.SpinBot.Enabled then
                repeat
                    if LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                        LocalPlayer.Character.HumanoidRootPart.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(luxecc.SpinBot.Speed), 0)
                    end
                    RunService.RenderStepped:Wait()
                until not luxecc.SpinBot.Enabled
            end
            Notify("luxe | Spin bot", "Spin bot : " .. tostring(luxecc.SpinBot.Enabled), 3)
        end
    }
)
RageSection:AddSlider(
    {
        Name = "Speed Multiplier",
        Value = luxecc.Speed.Speed,
        Min = 0,
        Max = 10,
        Decimals = 1,
        Format = function(v)
            return "Speed : " .. tostring(v)
        end,
        Callback = function(v)
            luxecc.Speed.Speed = v
            Notify("luxe | Speed", "Speed : " .. tostring(luxecc.Speed.Speed), 3)
        end
    }
)
RageSection:AddSlider(
    {
        Name = "Spin Speed Multiplier",
        Value = luxecc.SpinBot.Speed,
        Min = 0,
        Max = 100,
        Format = function(v)
            return "Spin Speed : " .. tostring(v)
        end,
        Callback = function(v)
            luxecc.SpinBot.Speed = v
            Notify("luxe | Spin Bot", "Speed : " .. tostring(luxecc.SpinBot.Speed), 3)
        end
    }
)
RageSection:AddToggle(
    {
        Name = "Strafe",
        Value = luxecc.Strafe.Enabled,
        Callback = function(v)
            luxecc.Strafe.Enabled = v
            Notify("luxe | Strafe", "Strafe : " .. tostring(luxecc.Strafe.Enabled), 3)
        end
    }
)
RageSection:AddToggle(
    {
        Name = "View Target",
        Value = luxecc.Strafe.View,
        Callback = function(v)
            luxecc.Strafe.View = v
            Notify("luxe | Strafe", "View Target : " .. tostring(luxecc.Strafe.View), 3)
        end
    }
)
RageSection:AddDropdown(
    {
        Name = "Strafe Type",
        Value = luxecc.Strafe.Type,
        List = {"Orbit", "Randomzied"},
        Callback = function(v)
            luxecc.Strafe.Type = v
            Notify("luxe | Strafe", "Type : "..tostring(luxecc.Strafe.Type), 3)
        end
    }
)
RageSection:AddSlider(
    {
        Name = "Strafe Speed Multiplier",
        Value = luxecc.Strafe.Speed,
        Min = 0,
        Max = 10,
        Decimals = 1,
        Format = function(v)
            return "Strafe Speed : " .. tostring(v)
        end,
        Callback = function(v)
            luxecc.Strafe.Speed = v
            Notify("luxe | Strafe", "Speed : " .. tostring(luxecc.Strafe.Speed), 3)
        end
    }
)
RageSection:AddSlider(
    {
        Name = "Strafe Distance Multiplier",
        Value = luxecc.Strafe.Distance,
        Min = 0,
        Max = 20,
        Format = function(v)
            return "Strafe Distance : " .. tostring(v)
        end,
        Callback = function(v)
            luxecc.Strafe.Distance = v
            Notify("luxe | Strafe", "Distance : " .. tostring(luxecc.Strafe.Distance), 3)
        end
    }
)

local TPTab = luxe:CreateTab({Name = "Teleports"})
local TPSection = TPTab:CreateSection({Name = "Map Teleports", Side = "Left"})
TPSection:AddButton(
    {
        Name = "UFO",
        Callback = function()
            LocalPlayer.Character.HumanoidRootPart.CFrame = luxecc.Teleports.UFO
        end
    }
)
TPSection:AddButton(
    {
        Name = "Bank",
        Callback = function()
            LocalPlayer.Character.HumanoidRootPart.CFrame = luxecc.Teleports.Bank
        end
    }
)

TPSection:AddButton(
    {
        Name = "Casino",
        Callback = function()
            LocalPlayer.Character.HumanoidRootPart.CFrame = luxecc.Teleports.Casino
        end
    }
)

TPSection:AddButton(
    {
        Name = "School",
        Callback = function()
            LocalPlayer.Character.HumanoidRootPart.CFrame = luxecc.Teleports.School
        end
    }
)

TPSection:AddButton(
    {
        Name = "Up Hill",
        Callback = function()
            LocalPlayer.Character.HumanoidRootPart.CFrame = luxecc.Teleports.UpHill
        end
    }
)


TPSection:AddButton(
    {
        Name = "Down Hill",
        Callback = function()
            LocalPlayer.Character.HumanoidRootPart.CFrame = luxecc.Teleports.DownHill
        end
    }
)

TPSection:AddButton(
    {
        Name = "Strip Club",
        Callback = function()
            LocalPlayer.Character.HumanoidRootPart.CFrame = luxecc.Teleports.StripClub
        end
    }
)

TPSection:AddButton(
    {
        Name = "Shopping Plaza",
        Callback = function()
            LocalPlayer.Character.HumanoidRootPart.CFrame = luxecc.Teleports.ShoppingPlaza
        end
    }
)


local ArmorSection = TPTab:CreateSection({Name = "Armor Teleports", Side = "Right"})
ArmorSection:AddButton(
    {
        Name = "Medium Armor [ $1061 ]",
        Callback = function()
            if LocalPlayer and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                if LocalPlayer.Character.BodyEffects.Armor.Value <= 100 and workspace.Ignored.Shop:FindFirstChild("[Medium Armor] - $1061") and not LocalPlayer.Character.BodyEffects["K.O"].Value then
                    
                    if not OldPos then
                        OldPos = LocalPlayer.Character.HumanoidRootPart.CFrame
                    end
                    
                    local equippedTool = LocalPlayer.Character:FindFirstChildOfClass("Tool")
                    if equippedTool then
                        equippedTool.Parent = LocalPlayer.Backpack
                    end

                    repeat
                        if workspace.Ignored.Shop:FindFirstChild("[Medium Armor] - $1061") and workspace.Ignored.Shop["[Medium Armor] - $1061"]:FindFirstChild("ClickDetector") then
                            LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Ignored.Shop["[Medium Armor] - $1061"].Head.CFrame
                            wait(luxecc.AutoArmor.Delay)
                            fireclickdetector(workspace.Ignored.Shop["[Medium Armor] - $1061"].ClickDetector)
                        end
                        RunService.RenderStepped:Wait()
                    until LocalPlayer.Character.BodyEffects.Armor.Value >= 100 or LocalPlayer.Character.BodyEffects["K.O"].Value

                    if OldPos then
                        LocalPlayer.Character.HumanoidRootPart.CFrame = OldPos
                        OldPos = nil
                    end
                    if equippedTool then
                        equippedTool.Parent = LocalPlayer.Character
                    end

                end
            end
        end
    }
)
ArmorSection:AddButton(
    {
        Name = "High-Medium Armor [ $2440 ]",
        Callback = function()
            if LocalPlayer and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                if LocalPlayer.Character.BodyEffects.Armor.Value <= 130 and workspace.Ignored.Shop:FindFirstChild("[High-Medium Armor] - $2440") and not LocalPlayer.Character.BodyEffects["K.O"].Value then
                    
                    if not OldPos then
                        OldPos = LocalPlayer.Character.HumanoidRootPart.CFrame
                    end

                    local equippedTool = LocalPlayer.Character:FindFirstChildOfClass("Tool")
                    if equippedTool then
                        equippedTool.Parent = LocalPlayer.Backpack
                    end
                    
                    repeat
                        if workspace.Ignored.Shop:FindFirstChild("[High-Medium Armor] - $2440") and workspace.Ignored.Shop["[High-Medium Armor] - $2440"]:FindFirstChild("ClickDetector") then
                            LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Ignored.Shop["[High-Medium Armor] - $2440"].Head.CFrame
                            wait(luxecc.AutoArmor.Delay)
                            fireclickdetector(workspace.Ignored.Shop["[High-Medium Armor] - $2440"].ClickDetector)
                        end
                        RunService.RenderStepped:Wait()
                    until LocalPlayer.Character.BodyEffects.Armor.Value >= 130 or LocalPlayer.Character.BodyEffects["K.O"].Value

                    if OldPos then
                        LocalPlayer.Character.HumanoidRootPart.CFrame = OldPos
                        OldPos = nil
                    end
                    if equippedTool then
                        equippedTool.Parent = LocalPlayer.Character
                    end

                end
            end
        end
    }
)
ArmorSection:AddToggle(
    {
        Name = "Auto Armor",
        Value = luxecc.AutoArmor.Enabled,
        Callback = function(v)
            luxecc.AutoArmor.Enabled = v
            Notify("luxe | Auto Buy", "Auto Armor : " .. tostring(luxecc.AutoArmor.Enabled), 3)
        end
    }
)
ArmorSection:AddToggle(
    {
        Name = "Teleport",
        Value = luxecc.AutoArmor.TP,
        Callback = function(v)
            luxecc.AutoArmor.TP = v
            Notify("luxe | Auto Buy", "Teleport: " .. tostring(luxecc.AutoArmor.TP), 3)
        end
    }
)
ArmorSection:AddSlider(
    {
        Name = "Buy Delay",
        Value = luxecc.AutoArmor.Delay,
        Min = 0,
        Max = 1,
        Decimals = 1,
        Format = function(v)
            return "Delay: " .. tostring(v)
        end,
        Callback = function(v)
            luxecc.AutoArmor.Delay = v
            Notify("luxe | Auto Armor", "Delay: " .. tostring(luxecc.AutoArmor.Delay), 3)
        end
    }
)
ArmorSection:AddSlider(
    {
        Name = "Buy Health",
        Value = luxecc.AutoArmor.BuyHP,
        Min = 25,
        Max = 100,
        Format = function(v)
            return "Buy Armor HP: " .. tostring(v)
        end,
        Callback = function(v)
            luxecc.AutoArmor.BuyHP = v
            Notify("luxe | Auto Armor", "Buy Armor: " .. tostring(luxecc.AutoArmor.BuyHP), 3)
        end
    }
)
ArmorSection:AddDropdown(
    {
        Name = "Armor To Buy",
        Value = luxecc.AutoArmor.ArmorToBuy,
        List = {"[Medium Armor] - $1061", "[High-Medium Armor] - $2440"},
        Callback = function(v)
            luxecc.AutoArmor.ArmorToBuy = v
            Notify("luxe | Auto Buy", "Armor : "..tostring(luxecc.AutoArmor.ArmorToBuy), 3)
        end
    }
)

local ArmorSection = TPTab:CreateSection({Name = "Food Teleports", Side = "Right"})
ArmorSection:AddDropdown(
    {
        Name = "Food To Buy",
        Value = luxecc.AutoHeal.FoodToBuy,
        List = {"[Chicken] - $7", "[Popcorn] - $7", "[Donut] - $5", "[HotDog] - $8", "[Pizza] - $5", "[Taco] - $2"},
        Callback = function(v)
            luxecc.AutoHeal.FoodToBuy = v
            Notify("luxe | Auto Buy", "Food : "..tostring(luxecc.AutoHeal.FoodToBuy), 3)
        end
    }
)

--[[local GotoSection = TPTab:CreateSection({Name = "Player Teleports", Side = "Left"})
GotoSection:AddTextbox(
    {
        Name = "Go To",
        Value = "",
        Placeholder = "Enter Username/Display",
        Callback = function(v)
            local TeleportTarget = FindPlayer(v)
            if TeleportTarget and TeleportTarget.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                if luxecc.PTele.Type == "Tween" then
                    TweenService:Create(LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(luxecc.PTele.Speed, Enum.EasingStyle.Linear), {CFrame = TeleportTarget.Character.HumanoidRootPart.CFrame}):Play()
                elseif luxecc.PTele.Type == "CFrame" then
                    LocalPlayer.Character.HumanoidRootPart.CFrame = TeleportTarget.Character.HumanoidRootPart.CFrame
                end
            end
        end
    }
)
GotoSection:AddDropdown(
    {
        Name = "Teleport Type",
        Value = luxecc.PTele.Type,
        List = {"Tween", "CFrame"},
        Callback = function(v)
            luxecc.PTele.Type = v
            Notify("luxe | Teleport", "Teleport Type : "..tostring(luxecc.PTele.Type), 3)
        end
    }
)
GotoSection:AddSlider(
    {
        Name = "Teleport Speed",
        Value = luxecc.PTele.Speed,
        Min = 0,
        Max = 5,
        Format = function(v)
            return "Speed: " .. tostring(v)
        end,
        Callback = function(v)
            luxecc.PTele.Speed = v
            Notify("luxe | Teleport", "Speed: " .. tostring(luxecc.PTele.Speed), 3)
        end
    }
)]]



local MiscTab = luxe:CreateTab({Name = "Misc"})
local MiscSection = MiscTab:CreateSection({Name = "Misc", Side = "Left"})
MiscSection:AddSlider(
    {
        Name = "Field Of View",
        Value = workspace.CurrentCamera.FieldOfView,
        Min = 70,
        Max = 120,
        Format = function(v)
            return "Field Of View: " .. tostring(v)
        end,
        Callback = function(v)
            workspace.CurrentCamera.FieldOfView = v
            Notify("luxe | Field Of View", "Field Of View: " .. tostring(workspace.CurrentCamera.FieldOfView), 3)
        end
    }
)
--[[MiscSection:AddToggle(
    {
        Name = "Show Chat",
        Value = luxecc.Visuals.Chat,
        Callback = function(v)
            luxecc.Visuals.Chat = v
            LocalPlayer.PlayerGui.Chat.Frame.ChatChannelParentFrame.Visible = luxecc.Visuals.Chat
            LocalPlayer.PlayerGui.Chat.Frame.ChatChannelParentFrame.Position = UDim2.new(0, 0, 0, 160)
            Notify("luxe | Notification", "Chat: " .. tostring(luxecc.Visuals.Chat), 3)
        end
    }
)]]
MiscSection:AddToggle(
    {
        Name = "Headless",
        Value = luxecc.Headless.Enabled,
        Callback = function(v)
            luxecc.Headless.Enabled = v
            Notify("luxe | Headless", "Headless : "..tostring(luxecc.Headless.Enabled), 3)
            if luxecc.Headless.Enabled then
                LocalPlayer.Character.Head.Transparency = 1
                    for i, v in pairs(LocalPlayer.Character.Head:GetChildren()) do 
                        if (v:IsA('Decal')) then
                            v.Transparency = 1
                        end
                    end
            else
                LocalPlayer.Character.Head.Transparency = 0
                for i, v in pairs(LocalPlayer.Character.Head:GetChildren()) do 
                    if (v:IsA('Decal')) then
                        v.Transparency = 0
                    end
                end
            end
        end
    }
)
--[[MiscSection:AddToggle(
    {
        Name = "No Recoil",
        Value = luxecc.NoRecoil.Enabled,
        Callback = function(v)
            luxecc.NoRecoil.Enabled = v
            Notify("luxe | No Recoil", "No Recoil: " .. tostring(luxecc.NoRecoil.Enabled), 3)
        end
    }
)
MiscSection:AddToggle(
    {
        Name = "No JumpCooldown",
        Value = luxecc.NoJumpcooldown.Enabled,
        Callback = function(v)
            luxecc.NoJumpcooldown.Enabled = v
            Notify("luxe | No Jump Cooldown", "No Jump Cooldown: " .. tostring(luxecc.NoJumpcooldown.Enabled), 3)
        end
    }
)]]
MiscSection:AddToggle(
    {
        Name = "Notifications",
        Value = luxecc.Notification.Enabled,
        Callback = function(v)
            luxecc.Notification.Enabled = v
            Notify("luxe | Notification", "Notifications: " .. tostring(luxecc.Notification.Enabled), 3)
        end
    }
)
